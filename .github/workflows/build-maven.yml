name: Build Cerebral Application
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    # It will ignores changes to certain files and directories in the repository, such as below
    # Note that **/README.md will take all the README.md files present in this repository
    paths-ignore:
      - '**/README.md'
      - 'kustomize/**'
      - '.github/workflows/kustomize-build-ci.yaml'
      - 'terraform/**'
      - '.github/workflows/terraform-validate-ci.yaml'
      - '**/kubectl_backend_deployment_script.sh'

env:
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432
  
jobs:
  # Label of the runner job
  build:
    # You must use a Linux environment when using service containers or container jobs
    runs-on: ubuntu-latest

    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: cerebral
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
      redis:
        # Docker Hub Image
       image: redis
       ports:
          # Maps tcp port 5432 on service container to the host
          - 6379:6379
        

    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Check out repository code
        uses: actions/checkout@v3

      # Setting up JDK 11
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Set up environment variables
        run: |
          echo "POSTGRES_HOST=${{ env.POSTGRES_HOST }}" >> $GITHUB_ENV
          echo "POSTGRES_PORT=${{ env.POSTGRES_PORT }}" >> $GITHUB_ENV
        
      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html

      - name: Build with Maven
        run: mvn -B test package --file pom.xml

      # Packaging workflow data as artifacts
      - name: Copy Artifact To staging
        run: mkdir staging && cp target/*.jar staging
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging
        # Environment variables used by the `client.js` script to create
        # a new PostgreSQL table.
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: localhost
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
